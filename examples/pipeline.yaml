apiVersion: tekton.dev/v1bta1
kind: Pipeline
metadata:
  name: "demo-pipeline"
spec:
  params:
    - name: path
      type: string
      description: The path of the file to be created
  workspaces:
    - name: shared-workspace
  tasks:
    - name: write-file
      taskRef:
        name: write-file
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: path
          value: "$(params.path)"
        - name: contents
          value: |
            "hello"
            "hi"
    - name: check-file
      params:
        - name: path
          value: "$(params.path)"
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - write-file
      taskSpec:
        params:
          - name: path
        workspaces:
          - name: source
            description: The workspace to check for the file
        results:
          - name: exists
            description: indicates whether the file exists or is missing
        steps:
          - name: check-file
            image: alpine
            script: |
              if test -f $(workspaces.source.path)/$(params.path); then
                printf yes | tee $(results.exists.path)
              else
                printf no | tee $(results.exists.path)
              fi
    - name: echo-if-file-exists # when expression becomes false the task won't be executed
      runAfter:
        - check-file
      when:
        - input: "$(tasks.check-file.results.exists)"
          operator: in
          values: ["yes"]
      taskSpec:
        steps:
          - name: echo
            image: ubuntu
            script: 'echo file exists'
    - name: read-file
      runAfter: [echo-if-file-exists]
      params:
        - name: path
          value: "$(params.path)"
      taskSpec:
        params:
          - name: path
            type: string
        steps:
          - name: read
            image: ubuntu
            script: cat $(workspaces.source.path)/$(params.path)
        workspaces:
          - name: source
      workspaces:
        - name: source
          workspace: shared-workspace
  finally:
    # Cleanup workspace
    - name: cleanup
      taskRef:
        name: cleanup-workspace
      params:
        - name: path
          value: "$(params.path)"
      workspaces:
        - name: source
          workspace: shared-workspace


# finally and deleting the data
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-workspace
spec:
  workspaces:
    # Shared workspace where data stored
    - name: source
  params:
    - name: path
      type: string
  steps:
    - name: check-dir-exist
      image: ubuntu
      script: |
        if [ ! -f "$(workspaces.source.path)/$(params.path)" ]; then
          echo "Something went wrong and could not find data source under $(workspaces.source.path)/$(params.path)"
          exit 1
        fi
    - name: cleanup-workspace
      image: ubuntu
      script: |
        rm -rf $(workspaces.source.path)/$(params.path)
    - name: verify-dir-has-gone
      image: ubuntu
      script: |
        if [ -f "$(workspaces.source.path)/$(params.path)" ]; then
          echo "Something went wrong cleaning up and the data source still exists under $(workspaces.source.path)/$(params.path)"
          exit 1
        fi
